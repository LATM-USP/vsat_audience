---
import PublishedStory from "@components/story/published/PublishedStory.astro";
import { ErrorCodes } from "@domain/error/errorCode";
import imageUrlFor from "@domain/story/publish/imageUrlFor";
import parseStory from "@domain/story/publish/parseStory";
import toStoryId from "@domain/story/toStoryId";

const storyId = toStoryId(Astro.params.storyId);

if (!storyId) {
  return Astro.redirect(`/author/story?err=${ErrorCodes.StoryNotFound}`);
}

const { i18n, repositoryStory } = Astro.locals.environment<
  App.WithI18N & App.WithStoryRepository
>();

const story = await repositoryStory.getStory({
  id: storyId,
});

if (!story) {
  return Astro.redirect(`/author/story?err=${ErrorCodes.StoryNotFound}`);
}

const parseResult = parseStory(story);

if (parseResult.kind !== "storyParsed") {
  return Astro.redirect(`/author/story?err=${ErrorCodes.UnableToPublishStory}`);
}

const publishedStory = {
  ...parseResult.story,
  createdAt: new Date(),
  imageUrl: imageUrlFor(story),
};
---

<!doctype html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <title>
      {i18n.t("page.preview.meta.title", { title: story.title })}
    </title>
    <meta
      name="description"
      content={i18n.t("page.preview.meta.description", {
        author: story.author.name,
      })}
    />
    <link rel="stylesheet" href="/styles/site-public.css" />
    <script
      src="https://aframe.io/releases/1.7.0/aframe.min.js"
      is:inline
      crossorigin="anonymous"></script>
    <script
      src="https://unpkg.com/aframe-event-set-component@5.0.0/dist/aframe-event-set-component.min.js"
      is:inline
      crossorigin="anonymous"></script>
    <script
      src="https://unpkg.com/aframe-troika-text/dist/aframe-troika-text.min.js"
      is:inline
      crossorigin="anonymous"></script>
  </head>
</html>
<body>
  <PublishedStory story={publishedStory} />
</body>

\<script>

  AFRAME.registerComponent('rotation-reader', {
  init: function () {

    window.addEventListener('click', () => {
      const rotation = this.el.object3D.rotation;
      // const position = this.el.object3D.position;

      console.log('Rotação:', rotation);
      // console.log('Posição:', position);
    });
  }
});

    
</script>
